<div class="wiki-content maincontent"><h3>Overview</h3>

<p>An ActiveMQ broker can be extensivly configured using a single configuration URI. The following URI schemes are supported</p>

<table><tbody><tr><th colspan="1" rowspan="1"><p>Scheme</p></th><th colspan="1" rowspan="1"><p>Link</p></th><th colspan="1" rowspan="1"><p>Description</p></th></tr><tr><td colspan="1" rowspan="1"><p> xbean: </p></td><td colspan="1" rowspan="1"><p> <link><page ri:content-title="Broker XBean URI"></page></link> </p></td><td colspan="1" rowspan="1"><p> Configures the broker using an <link><page ri:content-title="Xml Configuration"></page></link> from an XML file which is on the classpath (or in 4.2 onwards can be on the file system or an external URL) which uses Spring and xbean-spring to configure the broker </p></td></tr><tr><td colspan="1" rowspan="1"><p> broker: </p></td><td colspan="1" rowspan="1"><p> <link><page ri:content-title="Broker URI"></page></link> </p></td><td colspan="1" rowspan="1"><p> Configures the broker explicitly using a URI syntax </p></td></tr><tr><td colspan="1" rowspan="1"><p> properties: </p></td><td colspan="1" rowspan="1"><p> <link><page ri:content-title="Broker Properties URI"></page></link> </p></td><td colspan="1" rowspan="1"><p> Configures the broker explicitly using a URI syntax </p></td></tr></tbody></table>



<p>For the most flexible and powerful option we recommend the <link><page ri:content-title="Xml Configuration"></page></link> via the <link><page ri:content-title="Broker XBean URI"></page></link> to configure AcitveMQ brokers.  </p>

<p>If you are worried about jar dependencies then either the <link><page ri:content-title="Broker URI"></page></link> or the <link><page ri:content-title="Broker Properties URI"></page></link> are useful as they are very simple and require no dependencies on Spring or xbean-spring and don't require any XML.</p></div>

