<div class="wiki-content maincontent"><p>CMS (stands for C++ Messaging Service) is a JMS-like API for C++ for interfacing with Message Brokers such as <a shape="rect" href="http://activemq.apache.org">Apache ActiveMQ</a>. CMS helps to make your C++ client code much neater and easier to follow. To get a better feel for CMS try the <link><page ri:content-title="API"></page></link> Reference. ActiveMQ-CPP is a client only library, a message broker such as <a shape="rect" href="http://activemq.apache.org">Apache ActiveMQ</a> is still needed for your clients to communicate.</p><p>Our implementation of CMS is called ActiveMQ-CPP, which has an architecture that allows for pluggable transports and wire formats. Currently we support the <link><page ri:content-title="OpenWire Support"></page><plain-text-link-body>OpenWire</plain-text-link-body></link> and <link><page ri:content-title="Stomp Support"></page><plain-text-link-body>Stomp</plain-text-link-body></link> protocols, both over TCP and SSL, we also now support a Failover Transport for more reliable client operation. In addition to CMS, ActiveMQ-CPP also provides a robust set of classes that support platform independent constructs such as threading, I/O, sockets, etc. You may find many of these utilities very useful, such as a Java like Thread class or the "synchronized" macro that let's you use a Java-like synchronization on any object that implements the activemq::concurrent::Synchronizable interface. ActiveMQ-CPP is released under the <a shape="rect" href="http://www.apache.org/">Apache</a> <a shape="rect" href="http://www.apache.org/licenses/LICENSE-2.0.html">2.0 License</a></p><p><image><attachment ri:filename="ActiveMQ-CPP.png"></attachment></image></p><h3>Latest News Items.</h3><p><structured-macro ac:macro-id="6bca84f5-0f2c-4d7e-b7b6-b55e56478097" ac:name="blog-posts" ac:schema-version="1"><parameter ac:name="">4</parameter></structured-macro></p><h3>To see older News postings.</h3><ul><li><link><page ri:content-title="News"></page><plain-text-link-body>Get all the Apache ActiveMQ-CPP News Here!</plain-text-link-body></link></li></ul></div>

