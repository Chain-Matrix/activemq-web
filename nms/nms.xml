<div class="wiki-content maincontent"><h2>Getting Started with NMS</h2>

<p>The NMS API provides your client with a common API model for working with Message Oriented Middleware, but to make use of the API you need to download one of the NMS Provider libraries.  The NMS Providers libraries are what makes it possible for your code to connect to your Message Broker.  Follow the links below to read more about the <link><page ri:content-title="NMS Providers"></page><link-body>NMS Provider</link-body></link> for your Message broker and <link><page ri:content-title="Download"></page><link-body>download</link-body></link> a release bundle.</p>

<structured-macro ac:macro-id="956dc71e-79c5-40f3-84ea-b51e73ee1328" ac:name="include" ac:schema-version="1"><parameter ac:name=""><link><page ri:content-title="NMS Providers"></page></link></parameter></structured-macro>

<h2>Building the code</h2>

<p>While there are binary distributions available for all the <link><page ri:content-title="NMS Providers"></page></link> you sometimes might want to build the code from trunk in order to test out the latest changes or fixes.  On Windows you can use Visual Studio to build the code. On Linux or OS X you can use <a shape="rect" href="http://www.mono-project.com">Mono</a>.</p>

<p>The build uses <a shape="rect" href="http://nant.sourceforge.net/">NAnt</a> which both work on .Net and Mono.&#160; You will need to have NAnt 0.91-Alpha2 or later.</p>

<p>For more help see the <a shape="rect" href="http://activemq.apache.org/nms/building.html">Building NMS</a> guide.</p>

<h2>Alternatives to NMS</h2>

<p>There are currently a few alternatives to using NMS and working with ActiveMQ in .NET applications however the <link><page ri:content-title="Apache.NMS.ActiveMQ"></page><link-body>NMS ActiveMQ Provider</link-body></link> is very feature rich and we recommend it as your starting point for .NET ActiveMQ inter-op.</p>
<ul><li>use the <a shape="rect" href="http://stomp.codehaus.org/DotNet">pure C# Stomp client</a> to access ActiveMQ from .Net using a lightweight client.</li><li>use the ActiveMQ Java client from C# and .Net using IKVM. <a shape="rect" href="http://dotnetjunkies.com/WebLog/csteen/archive/2004/08/20/22813.aspx">More information</a>.</li><li>use the <a shape="rect" href="http://activemq.apache.org/rest.html">ActiveMQ REST</a> API via HTTP</li><li>use the <a shape="rect" href="http://activemq.apache.org/c-integration.html">ActiveMQ C Integration</a> to reuse the C/C++ library.</li></ul>
</div>

