<div class="wiki-content maincontent"><h2>An Overview of NMS</h2>

<p>The <link><page ri:content-title="NMS API"></page><link-body>NMS API</link-body></link> (<em>.Net Message Service API</em>) providers a standard .NET interface to Messaging Systems. There could be multiple implementations to different <link><page ri:content-title="NMS Providers"></page><link-body>providers</link-body></link> (including MSMQ).  The NMS API This allows you to build .NET applications in C#, VB, or any other .NET language, using a single API to connect to multiple different providers using a JMS style API.  </p>

<p>NMS API currently supports all of the features of JMS in a simple pure C# API and implementation apart from XA. Current features include</p>
<ul><li>creating &amp; disposing of connections, sessions, producers, consumers</li><li>sending of messages to topics, queues with durable or non durable along with temporary destination support</li><li>synchronous consuming (blocking receive, receive with no wait or receive with a timeout)</li><li>asynchronous consuming (adding a MessageListener to be dispatched in the thread pool)</li><li>message header support along with custom properties</li><li>Text, Bytes, Stream and Map message support</li><li>support for transactions (sending and acknowledging multiple messages in an atomic transaction)</li><li>redelivery of messages in rollbacks up to some configured maximum redelivery count</li><li>Optional Queue browser interface for providers that can support it.</li><li>Optional .NET Distributed Transaction Support for providers that can support that.</li></ul>


<p>A provider implementation based on a pure C# implementation of <a shape="rect" href="http://activemq.apache.org/openwire.html">OpenWire</a> is provided for working with the Apache ActiveMQ broker.&#160; There are other <link><page ri:content-title="NMS Providers"></page><link-body>provider implementations</link-body></link> for working with Stomp, TIBCO, Microsoft Message Queue (MSMQ), and Windows Communication Foundation (WCF).</p>

<p>If you are curious you can browse the <a shape="rect" href="https://svn.apache.org/repos/asf/activemq/activemq-dotnet/">source code and tests</a> for the entire project or download an <link><page ri:content-title="NMS Providers"></page><link-body>NMS Provider</link-body></link>.  </p>

<structured-macro ac:macro-id="22dcc8c7-0ee3-4e3b-8723-ddc87e10b401" ac:name="children" ac:schema-version="1"></structured-macro></div>

