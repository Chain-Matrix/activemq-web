<div class="wiki-content maincontent"><h2>JMX</h2><p>Apache ActiveMQ has extensive support for JMX to allow you to monitor and control the behavior of the broker via the <a shape="rect" href="http://activemq.apache.org/maven/apidocs/org/apache/activemq/broker/jmx/package-summary.html">JMX MBeans</a>.</p><h3>Using JMX to monitor Apache ActiveMQ</h3><p>You can enable/disable JMX support as follows...</p><p>1. <link><page ri:content-title="Run Broker"></page><plain-text-link-body>Run a broker</plain-text-link-body></link> setting the broker property useJmx to true (enabled by default) i.e.</p><p>For xbean configuration</p><structured-macro ac:macro-id="ffdf8aca-7895-4a18-91a1-5d432b672168" ac:name="code" ac:schema-version="1"><plain-text-body>&lt;broker useJmx="true" brokerName="BROKER1"&gt;
...
&lt;/broker&gt;
</plain-text-body></structured-macro><p>2. Run a JMX console</p><structured-macro ac:macro-id="171443e0-69a0-46f4-b507-386689ea89ad" ac:name="code" ac:schema-version="1"><plain-text-body>$ jconsole </plain-text-body></structured-macro><p>3. The ActiveMQ broker should appear in the list of local connections, if you are running JConsole on the same host as ActiveMQ.</p><p><strong style="color: rgb(102,0,51);font-size: 16.0px;"><br clear="none"></strong></p><p><strong style="color: rgb(102,0,51);font-size: 16.0px;">JMX remote access</strong></p><p>Remote connections to JMX are not enabled by default in the activemq.xml for security reasons. Please refer to&#160;<a shape="rect" href="http://docs.oracle.com/javase/6/docs/technotes/guides/management/agent.html">Java Management guide</a>&#160;to configure the broker for remote management.</p><p>&#160;</p><p><span style="line-height: 1.4285715;">Using the Apache ActiveMQ version on OS X it appears as follows:</span></p><p><image><attachment ri:filename="activemq-jmx.png"></attachment></image><br clear="none"> &#160;</p><h3>ActiveMQ MBeans Reference</h3><p>For additional references provided below is a brief hierarchy of the mbeans and a listing of the properties, attributes, and operations of each mbeans.</p><table><tbody><tr><th colspan="1" rowspan="1"><p>&#160;Mbean Type</p></th><th colspan="1" rowspan="1"><p>Properties / ObjectName&#160;</p></th><th colspan="1" rowspan="1"><p>Attributes&#160;</p></th><th colspan="1" rowspan="1"><p>Operations&#160;</p></th></tr><tr><td colspan="1" rowspan="1"><p>&#160;Broker</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;broker identifier&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>BrokerId</li><li>TotalEnqueueCount</li><li>TotalDequeueCount</li><li>TotalConsumerCount</li><li>TotalMessageCount</li><li>TotalConnectionsCount</li><li>TotalConsumerCount</li><li>TotalProducerCount</li><li>MemoryLimit</li><li>MemoryPercentUsage</li><li>StoreLimit</li><li>StorePercentUsage</li></ul></td><td colspan="1" rowspan="1"><ul><li>start</li><li>stop</li><li>terminateJVM</li><li>resetStatistics</li><li>gc</li></ul></td></tr><tr><td colspan="1" rowspan="1"><p>&#160;Destination</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;name of broker&gt;</li><li><strong>destinationType</strong>=Queue|Topic</li><li><strong>destinationName</strong>=&lt;name&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>AverageEnqueueTime</li><li><span style="line-height: 1.4285715;">ConsumerCount</span></li><li><span style="line-height: 1.4285715;">DequeueCount</span></li><li>EnqueueCount</li><li>ExpiredCount</li><li>InFlightCount</li><li><span style="line-height: 1.4285715;">MemoryLimit</span></li><li>MemoryPercentUsage</li><li>Name</li><li><span style="line-height: 1.4285715;">QueueSize (queues only)</span></li></ul></td><td colspan="1" rowspan="1"><ul><li>browseMessages</li><li>gc</li><li>purge</li><li>resetStatistics</li></ul></td></tr><tr><td colspan="1" rowspan="1"><p>&#160;NetworkConnector</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;name of broker&gt;</li><li><strong>connector</strong>=networkConnectors</li><li><strong>networkConnectorName</strong>=&lt;connector identifier&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>Name</li><li>Duplex</li><li>DynamicOnly</li><li>BridgeTempDestinations</li><li>ConduitSubscriptions</li><li>DecreaseNetworkConsumerPriority</li><li>DispatchAsync</li><li>DynamicOnly</li><li>NetworkTTL</li><li>Password</li><li>PrefetchSize</li></ul></td><td colspan="1" rowspan="1"><ul><li>start</li><li>stop</li></ul></td></tr><tr><td colspan="1" rowspan="1"><p>&#160;Connector</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;name of broker&gt;</li><li><strong>connector</strong>=clientConnectors</li><li><strong>ConnectorName</strong>=&lt;connector identifier&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>StatisticsEnabled</li></ul></td><td colspan="1" rowspan="1"><ul><li>start</li><li>stop</li><li>resetStatistics</li><li>enableStatistics</li><li>disableStatistics</li><li>connectionCount</li></ul></td></tr><tr><td colspan="1" rowspan="1"><p>&#160;Connection</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;name of broker&gt;</li><li><strong>connectionViewType</strong>=clientId</li><li><strong>connectionName</strong>=&lt;connection identifier&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>DispatchQueueSize</li><li>Active</li><li>Blocked</li><li>Connected</li><li>Slow</li><li>Consumers</li><li>Producers</li><li>RemoteAddress</li><li>UserName</li><li>ClientId</li></ul></td><td colspan="1" rowspan="1"><ul><li>start</li><li>stop</li><li>resetStatistics</li></ul></td></tr><tr><td colspan="1" rowspan="1"><p>&#160; PersistenceAdapter</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;broker name&gt;</li><li><strong>Service</strong>=PersistenceAdapter</li><li><strong>InstanceName</strong>=&lt;adapter identifier&gt;</li></ul></td><td colspan="1" rowspan="1"><ul><li>Name</li><li>Size</li><li>Data</li><li>Transactions</li></ul></td><td colspan="1" rowspan="1"><p>&#160;</p></td></tr><tr><td colspan="1" rowspan="1"><p>&#160;Health</p></td><td colspan="1" rowspan="1"><ul><li><strong>type</strong>=Broker</li><li><strong>brokerName</strong>=&lt;broker name&gt;</li><li><strong>Service</strong>=Health</li></ul></td><td colspan="1" rowspan="1"><ul><li>CurrentStatus</li></ul></td><td colspan="1" rowspan="1"><ul><li>health</li></ul></td></tr></tbody></table><p>Command line utilities are also available to let you monitor ActiveMQ. Refer to <link><page ri:content-title="ActiveMQ Command Line Tools Reference"></page></link> for usage information.</p><p>JMX API is also exposed via <link ac:anchor="Rest Management"><page ri:content-title="REST"></page><plain-text-link-body>REST management API </plain-text-link-body></link></p><h3>Password Protecting the JMX Connector</h3><p>(For Java 1.5+)</p><p>1. Make sure JMX is enabled, but tell ActiveMQ <strong>not</strong> create its own connector so that it will use the default JVM JMX connector.</p><structured-macro ac:macro-id="8464c71e-56cc-4fb0-aec3-7d93bfb2ffe2" ac:name="code" ac:schema-version="1"><parameter ac:name="">xml</parameter><plain-text-body>&lt;broker xmlns="http://activemq.org/config/1.0" brokerName="localhost"useJmx="true"&gt;

  ...

  &lt;managementContext&gt;
     &lt;managementContext createConnector="false"/&gt;
  &lt;/managementContext&gt;

  ...

&lt;/broker&gt;
</plain-text-body></structured-macro><p>2. Create access and password files</p><p>conf/jmx.access:</p><structured-macro ac:macro-id="f5545277-e779-4925-8de7-bf2a9c5b5fde" ac:name="code" ac:schema-version="1"><plain-text-body># The "monitorRole" role has readonly access.
# The "controlRole" role has readwrite access.
monitorRole readonly
controlRole readwrite
</plain-text-body></structured-macro><p>conf/jmx.password:</p><structured-macro ac:macro-id="b0ea5924-d5f5-4ce1-98d3-0aebdcde6ff3" ac:name="code" ac:schema-version="1"><plain-text-body># The "monitorRole" role has password "abc123".
# The "controlRole" role has password "abcd1234".
monitorRole abc123
controlRole abcd1234
</plain-text-body></structured-macro><p>(Make sure both files are not world readable - more info can be find <a shape="rect" href="http://java.sun.com/j2se/1.5.0/docs/guide/management/agent.html#auth">here</a> to protect files)</p><p>For more details you can see the <a shape="rect" href="http://tomcat.apache.org/tomcat-5.5-doc/monitoring.html">Monitoring Tomcat Document</a></p><p>3. Modify the "activemq" startup script (in bin) to enable the Java 1.5+ JMX connector</p><p>Find the "ACTIVEMQ_SUNJMX_START=" line and change it too the following: (note that in previous versions of ActiveMQ this property was called SUNJMX in some scripts. &#160;As of v5.12.0 all scripts use ACTIVEMQ_SUNJMX_START):</p><structured-macro ac:macro-id="54f2c4ab-bea5-48aa-b626-9084c0f0c664" ac:name="code" ac:schema-version="1"><plain-text-body>1. Windows

  ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.ssl=false \
    -Dcom.sun.management.jmxremote.password.file=%ACTIVEMQ_BASE%/conf/jmx.password \
    -Dcom.sun.management.jmxremote.access.file=%ACTIVEMQ_BASE%/conf/jmx.access

2. Unix

  ACTIVEMQ_SUNJMX_START="-Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.ssl=false \
    -Dcom.sun.management.jmxremote.password.file=${ACTIVEMQ_BASE}/conf/jmx.password \
    -Dcom.sun.management.jmxremote.access.file=${ACTIVEMQ_BASE}/conf/jmx.access"
</plain-text-body></structured-macro><p>This could be set in /etc/activemq.conf instead (if you have root access):</p><structured-macro ac:macro-id="2e3f12e0-d7a0-413f-98b2-efdc6d92f08f" ac:name="code" ac:schema-version="1"><plain-text-body>1. Windows

ACTIVEMQ_HOME=DRIVE_LETTER:/where/ActiveMQ/is/installed
ACTIVEMQ_BASE=%ACTIVEMQ_HOME%
ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.ssl=false \
    -Dcom.sun.management.jmxremote.password.file=%ACTIVEMQ_BASE%/conf/jmx.password \
    -Dcom.sun.management.jmxremote.access.file=%ACTIVEMQ_BASE%/conf/jmx.access

2. Unix

ACTIVEMQ_HOME=DRIVE_LETTER:/where/ActiveMQ/is/installed
ACTIVEMQ_BASE=${ACTIVEMQ_HOME}
ACTIVEMQ_SUNJMX_START="-Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.ssl=false \
    -Dcom.sun.management.jmxremote.password.file=${ACTIVEMQ_BASE}/conf/jmx.password \
    -Dcom.sun.management.jmxremote.access.file=${ACTIVEMQ_BASE}/conf/jmx.access"
</plain-text-body></structured-macro><p>4. Start ActiveMQ</p><p>You should be able to connect to JMX on the JMX URL</p><structured-macro ac:macro-id="5703fa7f-962a-4044-87c8-41d1d828d15c" ac:name="code" ac:schema-version="1"><plain-text-body>service:jmx:rmi:///jndi/rmi://&lt;your hostname&gt;:1616/jmxrmi
</plain-text-body></structured-macro><p>And you will be forced to login.</p><h3>Selective MBean registration</h3><p>In situations where you need to scale your broker to large number of connections, destinations and consumers it can become very expensive to keep JMX MBeans for all those objects. Instead of turning off JMX completely, starting with 5.12.0, you can selectively suppress registration of some types of MBeans and thus help your broker scale, while still having a basic view of the broker state.</p><p>For example, the following configuration will exclude all dynamic producers, consumers, connections and advisory topics from registering their MBeans</p><structured-macro ac:macro-id="72278916-ebd3-4827-b0d7-89db4f39b1be" ac:name="code" ac:schema-version="1"><parameter ac:name="language">xml</parameter><plain-text-body>&lt;managementContext&gt;
&lt;managementContext&#160;
   suppressMBean="endpoint=dynamicProducer,endpoint=Consumer,connectionName=*,destinationName=ActiveMQ.Advisory.*"
/&gt;
&lt;/managementContext&gt;</plain-text-body></structured-macro><p>&#160;</p><h4>ManagementContext Properties Reference</h4><table><tbody><tr><th colspan="1" rowspan="1"><p>Property Name</p></th><th colspan="1" rowspan="1"><p>Default Value</p></th><th colspan="1" rowspan="1"><p>Description</p></th></tr><tr><td colspan="1" rowspan="1"><p>useMBeanServer</p></td><td colspan="1" rowspan="1"><p>true</p></td><td colspan="1" rowspan="1"><p>If true then it avoids creating a new MBean server if a MBeanServer has already been created in the JVM</p></td></tr><tr><td colspan="1" rowspan="1"><p>jmxDomainName</p></td><td colspan="1" rowspan="1"><p>org.apache.activemq</p></td><td colspan="1" rowspan="1"><p>The jmx domain that all objects names will use</p></td></tr><tr><td colspan="1" rowspan="1"><p>createMBeanServer</p></td><td colspan="1" rowspan="1"><p>true</p></td><td colspan="1" rowspan="1"><p>If we should create the MBeanServer is none is found.</p></td></tr><tr><td colspan="1" rowspan="1"><p>createConnector</p></td><td colspan="1" rowspan="1"><p>false</p></td><td colspan="1" rowspan="1"><p><span style="color: rgb(119,119,119);"><span style="color: rgb(0,0,0);">Please refer to</span>&#160;</span><a shape="rect" href="http://docs.oracle.com/javase/6/docs/technotes/guides/management/agent.html">Java Management guide</a><span style="color: rgb(119,119,119);">&#160;<span style="color: rgb(0,0,0);">to configure the server for remote management and lock down the endpoint serialisation with an appropriate <a shape="rect" href="http://openjdk.java.net/jeps/290"> jdk.serialFilter</a></span></span></p></td></tr><tr><td colspan="1" rowspan="1"><p>connectorPort</p></td><td colspan="1" rowspan="1"><p>1099</p></td><td colspan="1" rowspan="1"><p>The port that the JMX connector will use</p></td></tr><tr><td colspan="1" rowspan="1"><p>connectorHost</p></td><td colspan="1" rowspan="1"><p>localhost</p></td><td colspan="1" rowspan="1"><p>The host that the JMX connector and RMI server (if rmiServerPort&gt;0) will use</p></td></tr><tr><td colspan="1" rowspan="1"><p>rmiServerPort</p></td><td colspan="1" rowspan="1"><p>0</p></td><td colspan="1" rowspan="1"><p>The RMI server port, handy if port usage needs to be restricted behind a firewall</p></td></tr><tr><td colspan="1" rowspan="1"><p>connectorPath</p></td><td colspan="1" rowspan="1"><p>/jmxrmi</p></td><td colspan="1" rowspan="1"><p>The path that JMX connector will be registered under</p></td></tr><tr><td colspan="1" rowspan="1"><p>findTigerMBeanServer</p></td><td colspan="1" rowspan="1"><p>true</p></td><td colspan="1" rowspan="1"><p>Enables/disables the searching for the Java 5 platform MBeanServer</p></td></tr><tr><td colspan="1" rowspan="1"><p>suppressMBean</p></td><td colspan="1" rowspan="1">&#160;</td><td colspan="1" rowspan="1">List of MBean name patters to ignore</td></tr></tbody></table></div>

