<div class="wiki-content maincontent"><p>It is very common for an organisation to have lots of legacy C code which needs integration into the message bus. The current available solutions are</p>
<ul><li><link><page ri:content-title="CMS"></page></link> is an easy-to-use JMS 1.1-like API for C++. Our implementation of CMS is called ActiveMQ-CPP, the architecture for which supports pluggable transport protocols, very much like the ActiveMQ broker itself.</li><li>use the <link><page ri:content-title="OpenWire C Client"></page></link> which is only available in ActiveMQ 4.x or later.</li><li>we are working on the <link><page ri:content-title="OpenWire CPP Client"></page></link></li></ul>


<ul><li>use the <a shape="rect" href="http://stomp.codehaus.org/C">Stomp C Client</a> for any version of ActiveMQ from 3.1 onwards. You can also use <a shape="rect" href="http://stomp.codehaus.org/">Stomp</a> from many other languages like .Net, Python, Ruby, Perl etc.</li></ul>


<p>Other alternative mechanisms to communicate using.</p>
<ul><li>use the <link><page ri:content-title="REST"></page></link> API</li><li>use <a shape="rect" href="http://servicemix.org/WS+Notification">WS-Notification</a> and generate C bindings to WS-Notification using a SOAP stack</li><li>use <link><page ri:content-title="How do I access ActiveMQ from CSharp or dotNet"></page><link-body>.Net or Mono</link-body></link> to use ActiveMQ insided .Net</li><li><link><page ri:content-title="Compile ActiveMQ with GCJ"></page></link> to get a native C/C++ library</li><li>link to the ActiveMQ Java client using JNI</li><li>Use a Jabber client to talk to the ActiveMQ broker via the <link><page ri:content-title="xmpp"></page><link-body>XMPP</link-body></link> protocol</li></ul>
</div>

