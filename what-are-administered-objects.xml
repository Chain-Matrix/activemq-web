<div class="wiki-content maincontent"><h2>What are administered objects?</h2>

<p>Administered objects refers to objects that are configured in <link><page ri:content-title="JNDI Support"></page><link-body>JNDI</link-body></link> and then accessed by a JMS client. So they are simply client-side objects typically either a ConnectionFactory or a Destination (such as a Queue or Topic).</p>

<p>Note that administered objects are only used for JNDI. JNDI can then be used as a level of indirection between the JNDI API and the concrete API of the JMS provider. So looking up objects in JNDI avoids you having a runtime dependency on ActiveMQ. Given that we are only talking about one ConnectionFactory object and a few Destination objects, this is not a huge big deal though <emoticon ac:name="smile"></emoticon></p>

<p>Often folks get very confused with JNDI. e.g. in RMI / EJB scenarios JNDI provides client side proxies; this is not the case with JMS, as the JMS client is the client side proxy to the broker.</p>

<p>An alternative approach to creating administered objects in JNDI is to just use the <link><page ri:content-title="Spring Support"></page></link> and let dependency injection be an alternative to JNDI.</p>

<h3>See Also</h3>

<ul><li><link><page ri:content-title="How do I create new destinations"></page></link></li><li><link><page ri:content-title="How do I embed a Broker inside a Connection"></page></link></li><li><link><page ri:content-title="How does ConnectionFactory relate to the Broker"></page></link></li></ul>

</div>

