<div class="wiki-content maincontent"><ul><li>Supports a variety of <a shape="rect" href="cross-language-clients.xml">Cross Language Clients and Protocols</a> from Java, C, C++, C#, Ruby, Perl, Python, PHP<ul><li><a shape="rect" href="openwire.xml">OpenWire</a> for high performance clients in Java, C, C++, C#</li><li><a shape="rect" href="stomp.xml">Stomp</a> support so that clients can be written easily in C, Ruby, Perl, Python, PHP, ActionScript/Flash, Smalltalk to talk to ActiveMQ as well as any other popular Message Broker</li><li><a shape="rect" href="amqp.xml">AMQP</a> v1.0 support</li><li><a shape="rect" href="mqtt.xml">MQTT</a> v3.1 support allowing for connections in an IoT environment.</li></ul></li><li>full support for the <a shape="rect" href="enterprise-integration-patterns.xml">Enterprise Integration Patterns</a> both in the JMS client and the Message Broker</li><li>Supports many <a shape="rect" href="features.xml">advanced features</a> such as <a shape="rect" href="message-groups.xml">Message Groups</a>, <a shape="rect" href="virtual-destinations.xml">Virtual Destinations</a>, <a shape="rect" href="wildcards.xml">Wildcards</a> and <a shape="rect" href="composite-destinations.xml">Composite Destinations</a></li><li>Fully supports JMS 1.1 and J2EE 1.4 with support for transient, persistent, transactional and XA messaging</li><li><a shape="rect" href="spring-support.xml">Spring Support</a> so that ActiveMQ can be easily embedded into Spring applications and configured using Spring's XML configuration mechanism</li><li>Tested inside popular J2EE servers such as <a shape="rect" class="external-link" href="http://tomee.apache.org/">TomEE</a>, <a shape="rect" class="external-link" href="http://geronimo.apache.org/">Geronimo</a>, JBoss, GlassFish and WebLogic<ul><li>Includes <a shape="rect" href="resource-adapter.xml">JCA 1.5 resource adaptors</a> for inbound &amp; outbound messaging so that ActiveMQ should auto-deploy in any J2EE 1.4 compliant server</li></ul></li><li>Supports pluggable <a shape="rect" href="uri-protocols.xml">transport protocols</a> such as <a shape="rect" href="how-do-i-use-activemq-using-in-jvm-messaging.xml">in-VM</a>, TCP, SSL, NIO, UDP, multicast, JGroups and JXTA transports</li><li>Supports very fast <a shape="rect" href="persistence.xml">persistence</a> using JDBC along with a high performance journal</li><li>Designed for high performance clustering, client-server, peer based communication</li><li><a shape="rect" href="rest.xml">REST</a> API to provide technology agnostic and language neutral web based API to messaging</li><li><a shape="rect" href="ajax.xml">Ajax</a> to support web streaming support to web browsers using pure DHTML, allowing web browsers to be part of the messaging fabric</li><li><a shape="rect" href="axis-and-cxf-support.xml">CXF and Axis Support</a> so that ActiveMQ can be easily dropped into either of these web service stacks to provide reliable messaging</li><li>Can be used as an in memory JMS provider, ideal for <a shape="rect" href="how-to-unit-test-jms-code.xml">unit testing JMS</a></li></ul></div>

